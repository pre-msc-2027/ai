[tool.poetry]
name = "secu-scan-ai"
version = "0.1.0"
description = "Simple command-line tools to generate analysis reports using Ollama models."
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
ollama = ">=0.5.0"
python-dotenv = "^1.1.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
pytest-cov = "^4.0.0"
mypy = "^1.16.0"
flake8 = "^7.0.0"
black = "^24.0.0"
isort = "^5.13.0"
pre-commit = "^4.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
ai-analyzer = "src.main:main"
ollama-chat = "experiments.ollama_chat:main"
ollama-analyze = "experiments.ollama_analyze:main"
ollama-fix = "experiments.ollama_fix:main"
ollama-workspace = "experiments.ollama_workspace:main"

[tool.poetry.extras]
test = ["pytest", "pytest-asyncio", "pytest-mock", "pytest-cov"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=85",
    "--strict-markers",
    "--disable-warnings",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "api: Tests requiring API access",
    "ollama: Tests requiring Ollama client",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "tests_experiments/*",
    "experiments/*",
    "venv/*",
    ".venv/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | venv
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "experiments"]
force_sort_within_sections = true
combine_as_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':' (conflicts with black)
    "W503",  # line break before binary operator (conflicts with black)
]
per-file-ignores = [
    "tests/*:F401,F811",  # allow unused imports and redefinitions in tests
]
